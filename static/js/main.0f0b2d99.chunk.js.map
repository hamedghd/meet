{"version":3,"sources":["Event.js","EventList.js","Alert.js","NumberOfEvents.js","CitySearch.js","mock-data.js","api.js","WelcomeScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","expanded","toggleExpanded","bind","this","setState","event","className","summary","location","start","dateTime","timeZone","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","fontSize","display","style","text","InfoAlert","ErrorAlert","WarningAlert","NumberOfEvents","numberOfEvents","errorText","handleInputChanged","value","target","updateEvents","type","placeholder","onChange","CitySearch","query","suggestions","showSuggestions","undefined","infoText","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","onFocus","mockData","JSON","parse","stringify","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","startsWith","fetch","then","res","json","catch","result","getEvents","NProgress","done","console","log","navigator","onLine","lastEvents","token","removeQuery","url","extractLocations","setItem","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","Set","WelcomeScreen","showWelcomeScreen","align","class","src","alt","rel","App","currentCity","locationEvents","slice","mounted","eventNumber","isTokenValid","number","city","split","shift","updateNumberOfEvents","e","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"+SAqCeA,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAEXC,UAAU,GAEZ,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBANL,E,kDAQnB,WACEC,KAAKC,SAAS,CACZJ,UAAWG,KAAKJ,MAAMC,a,oBAG1B,WACE,IAAIK,EAAQF,KAAKL,MAAMO,MACvB,OACE,sBAAKC,UAAU,QAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCD,EAAME,UAC7C,sBAAKD,UAAU,aAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCD,EAAMG,WACtC,qBAAIF,UAAU,6BAAd,oBACUD,EAAMI,MAAMC,SADtB,iBAC8CL,EAAMI,MAAME,aAEjC,IAAxBR,KAAKJ,MAAMC,UACV,mBAAGM,UAAU,gBAAb,SAA8BD,EAAMO,iBAGxC,wBAAQN,UAAU,cAAcO,QAASV,KAAKF,eAA9C,SACIE,KAAKJ,MAAMC,SAA4B,eAAjB,wB,GA7Bdc,aCgBLC,E,4JAfb,WAEE,IAAQC,EAAWb,KAAKL,MAAhBkB,OACR,OACE,oBAAIV,UAAU,YAAd,SACGU,EAAOC,KAAI,SAAAZ,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMa,a,GAPDJ,aCClBK,E,kDACJ,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAKRsB,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,MACZC,SAAU,OACVC,QAAS,SAPX,EAAKF,MAAQ,KAHI,E,0CAenB,WACE,OACE,qBAAKf,UAAU,QAAf,SACE,mBAAGkB,MAAOrB,KAAKiB,WAAf,SAA4BjB,KAAKL,MAAM2B,a,GAnB3BX,aA0BdY,E,kDACJ,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,OAFI,E,UADGF,GAOlBQ,E,kDACJ,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,MAFI,E,UADIF,GAOnBS,E,kDACJ,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IACDuB,MAAQ,SAFI,E,UADMF,GCGZU,E,4MA1Cb9B,MAAQ,CACN+B,eAAgB,GAChBC,UAAW,I,EAEbC,mBAAqB,SAAC3B,GACpB,IAAM4B,EAAQ5B,EAAM6B,OAAOD,MAC3B,EAAKnC,MAAMqC,aAAa,KAAMF,GAE1BA,EAAQ,GAAKA,EAAQ,GACvB,EAAK7B,SAAS,CACZ0B,eAAgB,GAChBC,UAAW,kDAIb,EAAK3B,SAAS,CACZ0B,eAAgBG,EAChBF,UAAW,M,4CAKjB,WACE,IAAQD,EAAmB3B,KAAKJ,MAAxB+B,eACR,OACE,sBAAKxB,UAAU,iBAAf,UACE,uDACA,uBACEA,UAAU,qBACV8B,KAAK,SACLC,YAAY,yBACZnB,GAAG,wBACHe,MAAOH,EACPQ,SAAUnC,KAAK6B,qBAGjB,cAAC,EAAD,CAAYP,KAAMtB,KAAKJ,MAAMgC,mB,GArCRjB,aC8DdyB,E,4MA7DbxC,MAAQ,CACNyC,MAAO,GACPC,YAAa,GACbC,qBAAiBC,EACjBC,SAAU,I,EAEZZ,mBAAqB,SAAC3B,GACpB,IAAM4B,EAAQ5B,EAAM6B,OAAOD,MAC3B,EAAK7B,SAAS,CAAEsC,iBAAiB,IACjC,IAAMD,EAAc,EAAK3C,MAAM+C,UAAUC,QAAO,SAACtC,GAC/C,OAAOA,EAASuC,cAAcC,QAAQf,EAAMc,gBAAkB,KAEhE,GAA2B,IAAvBN,EAAYQ,OAMd,OAAO,EAAK7C,SAAS,CACnBoC,MAAOP,EACPQ,cACAG,SAAU,KARZ,EAAKxC,SAAS,CACZoC,MAAOP,EACPW,SAAU,2E,EAUhBM,kBAAoB,SAACC,GACnB,EAAK/C,SAAS,CACZoC,MAAOW,EACPT,iBAAiB,EACjBE,SAAU,KAEZ,EAAK9C,MAAMqC,aAAagB,EAAY,I,4CAEtC,WAAU,IAAD,OACP,OACE,sBAAK7C,UAAU,aAAf,UACE,uBACE8B,KAAK,OACL9B,UAAU,OACV2B,MAAO9B,KAAKJ,MAAMyC,MAClBF,SAAUnC,KAAK6B,mBACfoB,QAAS,WAAQ,EAAKhD,SAAS,CAAEsC,iBAAiB,OAEpD,qBAAIpC,UAAU,cAAckB,MAAOrB,KAAKJ,MAAM2C,gBAAkB,GAAK,CAAEnB,QAAS,QAAhF,UACGpB,KAAKJ,MAAM0C,YAAYxB,KAAI,SAACkC,GAAD,OAC1B,oBAEEtC,QAAS,kBAAM,EAAKqC,kBAAkBC,IAFxC,SAGEA,GAFKA,MAIT,oBAAItC,QAAS,kBAAM,EAAKqC,kBAAkB,QAA1C,SACE,mBAAG5C,UAAU,eAAb,iCAIJ,cAAC,EAAD,CAAWmB,KAAMtB,KAAKJ,MAAM6C,kB,GAxDX9B,a,QCHrBuC,EAAW,CAAC,CACd,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,mBACX,YAAe,uWACf,SAAY,aACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,WAEf,CACE,KAAQ,iBACR,KAAQ,qBACR,GAAM,8CACN,OAAU,YACV,SAAY,oJACZ,QAAW,2BACX,QAAW,2BACX,QAAW,eACX,YAAe,mSACf,SAAY,kBACZ,QAAW,CACT,MAAS,oCACT,MAAQ,GAEV,UAAa,CACX,MAAS,oCACT,MAAQ,GAEV,MAAS,CACP,SAAY,4BACZ,SAAY,iBAEd,IAAO,CACL,SAAY,4BACZ,SAAY,iBAEd,iBAAoB,6BACpB,kBAAqB,CACnB,SAAY,4BACZ,SAAY,iBAEd,QAAW,wCACX,SAAY,EACZ,UAAa,CACX,YAAc,GAEhB,UAAa,YAGfA,EAAWC,KAAKC,MAAMD,KAAKE,UAAUH,I,6CCzExBI,EAAc,uCAAG,sCAAAC,EAAA,yDACtBC,EAAcC,aAAaC,QAAQ,gBADb,KAETF,GAFS,qCAEaG,EAAWH,GAFxB,6BAEtBI,EAFsB,KAIvBJ,IAAeI,EAAWC,MAJH,kCAKpBJ,aAAaK,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBC,OAAO5D,SAAS6D,QAN/B,UAOPH,EAAaI,IAAI,QAPV,WAOpBC,EAPoB,yCASFC,IAAMF,IAC1B,kFAVsB,eASlBG,EATkB,OAYhBC,EAAYD,EAAQE,KAApBD,QAZgB,kBAahBN,OAAO5D,SAASoE,KAAOF,GAbP,iCAenBH,GAAQM,EAASN,IAfE,iCAiBrBZ,GAjBqB,4CAAH,qDAoBdG,EAAU,uCAAG,WAAOH,GAAP,eAAAD,EAAA,0DACpBU,OAAO5D,SAASoE,KAAKE,WAAW,oBADZ,yCAEf,IAFe,uBAKHC,MAAM,+DAAD,OACuCpB,IAE9DqB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACnB,GAAD,OAAWA,KATI,cAKlBoB,EALkB,yBAWjBA,GAXiB,2CAAH,sDAcVC,EAAS,uCAAG,oCAAA3B,EAAA,yDACvB4B,IAAU7E,SAEN2D,OAAO5D,SAASoE,KAAKE,WAAW,oBAHb,uBAIrBQ,IAAUC,OACVC,QAAQC,IAAIpC,GALS,kBAMdA,GANc,UASlBqC,UAAUC,OATQ,wBAUfC,EAAahC,aAAaC,QAAQ,cACxCyB,IAAUC,OACVC,QAAQC,IAAIG,GAZS,kBAcdA,EAAatC,KAAKC,MAAMqC,GAAY5E,OAAS,IAd/B,yBAiBHyC,IAjBG,aAiBjBoC,EAjBiB,gCAoBrBC,IACMC,EACJ,gFACAF,EAvBmB,UAwBArB,IAAMF,IAAIyB,GAxBV,eAwBfX,EAxBe,QAyBVT,OACL9B,EAAYmD,EAAiBZ,EAAOT,KAAK3D,QAC7C4C,aAAaqC,QAAQ,aAAc3C,KAAKE,UAAU4B,EAAOT,OACzDf,aAAaqC,QAAQ,YAAa3C,KAAKE,UAAUX,KAEnDyC,IAAUC,OA9BW,kBA+BdH,EAAOT,KAAK3D,QA/BE,4CAAH,qDAmChB8E,EAAc,WAClB,GAAI1B,OAAO8B,QAAQC,WAAa/B,OAAO5D,SAAS4F,SAAU,CACxD,IAAIC,EACFjC,OAAO5D,SAAS8F,SAChB,KACAlC,OAAO5D,SAAS+F,KAChBnC,OAAO5D,SAAS4F,SAClBhC,OAAO8B,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASjC,OAAO5D,SAAS8F,SAAW,KAAOlC,OAAO5D,SAAS+F,KAC3DnC,OAAO8B,QAAQC,UAAU,GAAI,GAAIE,IAI/BxB,EAAQ,uCAAG,WAAON,GAAP,mBAAAb,EAAA,6DACT8C,EAAaC,mBAAmBlC,GADvB,SAEgBQ,MAC7B,2EACAyB,GAECxB,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACnB,GAAD,OAAWA,KATL,wBAEP0C,EAFO,EAEPA,eASQ9C,aAAaqC,QAAQ,eAAgBS,GAXtC,kBAaRA,GAbQ,2CAAH,sDAgBDV,EAAmB,SAAChF,GAC/B,IAAIgF,EAAmBhF,EAAOC,KAAI,SAACZ,GAAD,OAAWA,EAAMG,YAEnD,OADa,YAAO,IAAImG,IAAIX,K,MCpEfY,MArCf,SAAuB9G,GACrB,OAAOA,EAAM+G,kBAET,sBAAKvG,UAAU,gBAAf,UACE,yDACA,0GAKA,qBAAKA,UAAU,cAAcwG,MAAM,SAAnC,SACE,sBAAKC,MAAM,aAAX,UACE,qBAAKA,MAAM,sBAAX,SACE,qBACEA,MAAM,cACNC,IAAI,8EACJC,IAAI,qBAGR,wBAAQpG,QAAS,WAAQf,EAAM2D,kBAC7ByD,IAAI,oBACJH,MAAM,WAFR,SAIE,2DAIN,mBACEnC,KAAK,+CACLsC,IAAI,oBAFN,+BAQF,MCwFSC,E,4MAjHbpH,MAAQ,CACNiB,OAAQ,GACR6B,UAAW,GACXf,eAAgB,GAChBsF,YAAa,MACbxE,SAAU,GACViE,uBAAmBlE,G,EAGrBR,aAAe,SAAC3B,EAAUsB,GACxBuD,IAAYL,MAAK,SAAChE,GAChB,IAAMqG,EACS,QAAb7G,EACIQ,EAAOsG,MAAM,EAAGxF,GAChBd,EAAO8B,QAAO,SAACzC,GAAD,OAAWA,EAAMG,WAAaA,KAC9C,EAAK+G,SACP,EAAKnH,SAAS,CACZY,OAAQqG,EAAeC,MAAM,EAAGxF,GAChCsF,YAAa5G,Q,0DAQrB,SAAqBgH,GACnBrH,KAAKC,SAAS,CAAE0B,eAAgB0F,IAChC,IAAQJ,EAAgBjH,KAAKJ,MAArBqH,YACRjH,KAAKgC,aAAaiF,EAAaI,K,sEAGjC,2CAAA9D,EAAA,6DACU5B,EAAmB3B,KAAKJ,MAAxB+B,eACR3B,KAAKoH,SAAU,EACT5D,EAAcC,aAAaC,QAAQ,gBAH3C,SAK8BC,EAAWH,GALzC,kBAKuDK,MALvD,sBAK+D,EAL/D,6BAKuE,EALvE,QAKQyD,EALR,KAMQvD,EAAe,IAAIC,gBAAgBC,OAAO5D,SAAS6D,QACnDE,EAAOL,EAAaI,IAAI,QAC9BnE,KAAKC,SAAS,CAAEyG,oBAAqBtC,GAAQkD,MACxClD,GAAQkD,IAAiBtH,KAAKoH,UACjClC,IAAYL,MAAK,SAAChE,GACZ,EAAKuG,SACP,EAAKnH,SAAS,CACZY,OAAQA,EAAOsG,MAAM,EAAGxF,GACxBe,UAAWmD,EAAiBhF,QAI7B0E,UAAUC,OAMbxF,KAAKC,SAAS,CACZwC,SAAU,KANZzC,KAAKC,SAAS,CACZwC,SACE,8EArBV,iD,wFA+BA,WACEzC,KAAKoH,SAAU,I,qBAGjB,WACE,MAA8BpH,KAAKJ,MAA3B8C,EAAR,EAAQA,UAAW7B,EAAnB,EAAmBA,OAQnB,OAPa6B,EAAU5B,KAAI,SAACT,GAC1B,IAAMkH,EAAS1G,EAAO8B,QACpB,SAACzC,GAAD,OAAWA,EAAMG,WAAaA,KAC9ByC,OAEF,MAAO,CAAE0E,KADInH,EAASoH,MAAM,MAAMC,QACnBH,e,oBAKnB,WAAU,IAAD,OACP,OAAIvH,KAAKJ,MAAM8G,kBAEX,cAAC,EAAD,CACEA,kBAAmB1G,KAAKJ,MAAM8G,kBAC9BpD,eAAgB,WACdA,OAMN,sBAAKnD,UAAU,MAAf,UACE,0CAEA,cAAC,EAAD,CACEuC,UAAW1C,KAAKJ,MAAM8C,UACtBV,aAAchC,KAAKgC,aACnBL,eAAgB3B,KAAKJ,MAAM+B,iBAG7B,cAAC,EAAD,CACEgG,qBAAsB,SAACC,GAAD,OAAO,EAAKD,qBAAqBC,MAKzD,cAAC,EAAD,CAActG,KAAMtB,KAAKJ,MAAM6C,SAAUtC,UAAU,cACnD,cAAC,EAAD,CAAWU,OAAQb,KAAKJ,MAAMiB,gB,GA5GpBF,aCCZkH,EAAcC,QACW,cAA7B7D,OAAO5D,SAAS0H,UAEa,UAA7B9D,OAAO5D,SAAS0H,UAEhB9D,OAAO5D,SAAS0H,SAASC,MAAM,2DAqCjC,SAASC,EAAgBC,EAAOC,GAC9B5C,UAAU6C,cACPC,SAASH,GACTrD,MAAK,SAACyD,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5I,QACf2F,UAAU6C,cAAcO,YAI1BtD,QAAQC,IACN,+GAKE6C,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBjD,QAAQC,IAAI,sCAGR6C,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BtD,OAAM,SAACnB,GACNwB,QAAQxB,MAAM,4CAA6CA,MC9FjE,IAYeiF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFOnB,SAAkBzB,GACvB,GAA6C,kBAAmB5C,UAAW,CAGzE,GADkB,IAAIsE,IAAIC,QAAwB7F,OAAO5D,SAASoE,MACpDsF,SAAW9F,OAAO5D,SAAS0J,OAIvC,OAGF9F,OAAO+F,iBAAiB,QAAQ,WAC9B,IAAM9B,EAAK,UAAM4B,QAAN,sBAEPjC,IAgEV,SAAiCK,EAAOC,GAEtCvD,MAAMsD,EAAO,CACX+B,QAAS,CAAE,iBAAkB,YAE5BpF,MAAK,SAACqF,GAEL,IAAMC,EAAcD,EAASD,QAAQ9F,IAAI,gBAEnB,MAApB+F,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYtH,QAAQ,cAG5C0C,UAAU6C,cAAciC,MAAMxF,MAAK,SAACyD,GAClCA,EAAagC,aAAazF,MAAK,WAC7BZ,OAAO5D,SAASkK,eAKpBtC,EAAgBC,EAAOC,MAG1BnD,OAAM,WACLK,QAAQC,IAAI,oEAtFVkF,CAAwBtC,EAAOC,GAI/B5C,UAAU6C,cAAciC,MAAMxF,MAAK,WACjCQ,QAAQC,IACN,+GAMJ2C,EAAgBC,EAAOC,OE7B/BsC,GAKA3B,M","file":"static/js/main.0f0b2d99.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //event: {},\r\n      expanded: false,\r\n    };\r\n    this.toggleExpanded = this.toggleExpanded.bind(this);\r\n  }\r\n  toggleExpanded() {\r\n    this.setState({\r\n      expanded: !this.state.expanded,\r\n    });\r\n  }\r\n  render() {\r\n    let event = this.props.event;\r\n    return (\r\n      <div className=\"event\">\r\n        <h2 className=\"event__Overview--name\">{event.summary}</h2>\r\n        <div className=\"basic-info\">\r\n          <h2 className=\"event-location\">{event.location}</h2>\r\n          <h3 className=\"event__Overview--localDate\">\r\n            start: {event.start.dateTime} - Time Zone: {event.start.timeZone}\r\n          </h3>\r\n          {this.state.expanded === true && (\r\n            <p className=\"event-details\">{event.description}</p>\r\n          )}\r\n        </div>\r\n        <button className=\"details-btn\" onClick={this.toggleExpanded}>\r\n          {!this.state.expanded ? 'Show Details' : 'Hide Details'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nclass EventList extends Component {\r\n  render() {\r\n    // Renders a list of events using the events prop:\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\n// This is the parent class:\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // The color of Alert is set to null by default as its children will override this later on.\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontSize: '14px',\r\n      display: 'flex',\r\n    };\r\n  }\r\n\r\n  // This component attempts to render text it receives from its props, using the style from its getStyle function.\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Creates subclasses: InfoAlert and ErrorAlert\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 32,\r\n    errorText: '',\r\n  };\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.props.updateEvents(null, value);\r\n\r\n    if (value < 1 || value > 32) {\r\n      this.setState({\r\n        numberOfEvents: '',\r\n        errorText: 'Please insert a valid number between 1 and 32'\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: ''\r\n      });\r\n    }\r\n\r\n  };\r\n  render() {\r\n    const { numberOfEvents } = this.state;\r\n    return (\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          className=\"event-number-input\"\r\n          type=\"number\"\r\n          placeholder=\"Enter Number of Events\"\r\n          id=\"numberOfEvents__input\"\r\n          value={numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        { /* Displays InfoAlert */}\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: '',\r\n  }\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  };\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n      infoText: ''\r\n    });\r\n    this.props.updateEvents(suggestion, 0);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b className=\"seeAllCities\">See all cities</b>\r\n          </li>\r\n        </ul>\r\n        { /* Displays InfoAlert */}\r\n        <InfoAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","let mockData = [{\r\n  \"kind\": \"calendar#event\",\r\n  \"etag\": \"\\\"3181161784712000\\\"\",\r\n  \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n  \"status\": \"confirmed\",\r\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n  \"created\": \"2020-05-19T19:17:46.000Z\",\r\n  \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n  \"summary\": \"Learn JavaScript\",\r\n  \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n  \"location\": \"London, UK\",\r\n  \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n  },\r\n  \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n  },\r\n  \"start\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"end\": {\r\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n  \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n  \"sequence\": 0,\r\n  \"reminders\": {\r\n    \"useDefault\": true\r\n  },\r\n  \"eventType\": \"default\"\r\n},\r\n{\r\n  \"kind\": \"calendar#event\",\r\n  \"etag\": \"\\\"3181159875584000\\\"\",\r\n  \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n  \"status\": \"confirmed\",\r\n  \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n  \"created\": \"2020-05-19T19:14:30.000Z\",\r\n  \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n  \"summary\": \"React is Fun\",\r\n  \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n  \"location\": \"Berlin, Germany\",\r\n  \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n  },\r\n  \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n  },\r\n  \"start\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"end\": {\r\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n  \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n  },\r\n  \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n  \"sequence\": 0,\r\n  \"reminders\": {\r\n    \"useDefault\": true\r\n  },\r\n  \"eventType\": \"default\"\r\n}]\r\n\r\nmockData = JSON.parse(JSON.stringify(mockData));\r\nexport { mockData };","\r\nimport { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport \"./nprogress.css\";\r\nimport NProgress from \"nprogress\";\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://4jnk8m9t52.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    return {};\r\n  }\r\n\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error);\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    console.log(mockData);\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const lastEvents = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    console.log(lastEvents);\r\n\r\n    return lastEvents ? JSON.parse(lastEvents).events : [];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url =\r\n      \"https://4jnk8m9t52.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/\" +\r\n      token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    \"https://4jnk8m9t52.execute-api.eu-central-1.amazonaws.com/dev/api/token/\" +\r\n    encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ?\r\n    (\r\n      <div className=\"WelcomeScreen\">\r\n        <h1>Welcome to the Meet app</h1>\r\n        <h4>\r\n          Log in to see upcoming events around the world for\r\n          full-stack\r\n          developers\r\n        </h4>\r\n        <div className=\"button_cont\" align=\"center\">\r\n          <div class=\"google-btn\">\r\n            <div class=\"google-icon-wrapper\">\r\n              <img\r\n                class=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"Google sign-in\"\r\n              />\r\n            </div>\r\n            <button onClick={() => { props.getAccessToken() }}\r\n              rel=\"nofollow noopener\"\r\n              class=\"btn-text\"\r\n            >\r\n              <b>Sign in with google</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <a\r\n          href=\"https://hamedghd.github.io/meet/privacy.html\"\r\n          rel=\"nofollow noopener\"\r\n        >\r\n          Privacy policy\r\n        </a>\r\n      </div>\r\n    )\r\n    : null\r\n}\r\nexport default WelcomeScreen;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport EventList from \"./EventList\";\r\nimport NumberOfEvents from \"./NumberOfEvents\";\r\nimport CitySearch from \"./CitySearch\";\r\nimport { WarningAlert } from \"./Alert\";\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from \"./api\";\r\n//import \"./style.css\";\r\nimport WelcomeScreen from \"./WelcomeScreen\";\r\n//import EventGenre from \"./EventGenre\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    currentCity: \"all\",\r\n    infoText: \"\",\r\n    showWelcomeScreen: undefined,\r\n  };\r\n\r\n  updateEvents = (location, numberOfEvents) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === \"all\"\r\n          ? events.slice(0, numberOfEvents)\r\n          : events.filter((event) => event.location === location);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents.slice(0, numberOfEvents),\r\n          currentCity: location,\r\n          //locations: [location],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //I this function will update tbe number of events of app.state fom <NumberOfEvents>\r\n  updateNumberOfEvents(eventNumber) {\r\n    this.setState({ numberOfEvents: eventNumber });\r\n    const { currentCity } = this.state;\r\n    this.updateEvents(currentCity, eventNumber);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { numberOfEvents } = this.state;\r\n    this.mounted = true;\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: events.slice(0, numberOfEvents),\r\n            locations: extractLocations(events),\r\n          });\r\n        }\r\n      });\r\n      if (!navigator.onLine) {\r\n        this.setState({\r\n          infoText:\r\n            \"Internet connection not detected, previously loaded events are displayed\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: \"\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  getData() {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter(\r\n        (event) => event.location === location\r\n      ).length;\r\n      const city = location.split(\", \").shift(); //split the location at the occurrence of \", \" and return an array- .shift() array function to get the first element in the array\r\n      return { city, number };\r\n    });\r\n    return data;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen)\r\n      return (\r\n        <WelcomeScreen\r\n          showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => {\r\n            getAccessToken();\r\n          }}\r\n        />\r\n      );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>MEET APP</h1>\r\n\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n          numberOfEvents={this.state.numberOfEvents}\r\n        />\r\n\r\n        <NumberOfEvents\r\n          updateNumberOfEvents={(e) => this.updateNumberOfEvents(e)}\r\n        />\r\n\r\n\r\n\r\n        <WarningAlert text={this.state.infoText} className=\"InfoAlert\" />\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('0d7a0c68a89d49b1866d5f13ae983df8').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n//atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}